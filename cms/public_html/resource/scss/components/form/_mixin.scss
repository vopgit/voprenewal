@use '../../common/variables' as var;
@use '../../common/color' as color;
@use '../../common/' as *;

@use 'sass:string';


@function svgRdIcon($color){
  $color: '%23' + str-replace( #{$color}, "#", "");
  $icon: "data:image/svg+xml,%3Csvg version='1.1' baseProfile='tiny' xmlns='http://www.w3.org/2000/svg' width='20px' height='20px' x='0px' y='0px' viewBox='0 0 20 20'%3E%3Ccircle fill='#{$color}' cx='10' cy='9.9' r='4.2'/%3E%3Cg%3E%3Cpath fill='none' d='M10,1.1c-4.9,0-8.9,4-8.9,8.9c0,4.9,4,8.9,8.9,8.9c4.9,0,8.9-4,8.9-8.9C18.9,5.1,14.9,1.1,10,1.1z'/%3E%3Cpath fill='#{$color}' d='M10,0.1c-5.5,0-9.9,4.4-9.9,9.9s4.5,9.9,9.9,9.9c5.4,0,9.9-4.4,9.9-9.9S15.5,0.1,10,0.1z M10,18.9 c-4.9,0-8.9-4-8.9-8.9c0-4.9,4-8.9,8.9-8.9c4.9,0,8.9,4,8.9,8.9C18.9,14.9,14.9,18.9,10,18.9z'/%3E%3C/g%3E%3C/svg%3E%0A";
  @return url($icon);
}

@function svgChIcon($color){
  $color: '%23' + str-replace( #{$color}, "#", "");
  $icon: "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' id='check_big' x='0px' y='0px' viewBox='0 0 27 27' style='enable-background:new 0 0 27 27;' xml:space='preserve'%3E%3Cstyle type='text/css'%3E .st0%7Bfill:#{$color}%7D .st1%7Bfill:%23FFFFFF;%7D%0A%3C/style%3E%3Cpath class='st0' d='M24,27H3c-1.7,0-3-1.3-3-3V3c0-1.7,1.3-3,3-3h21c1.7,0,3,1.3,3,3v21C27,25.7,25.7,27,24,27z'/%3E%3Cpath id='icon_copy_2' class='st1' d='M20,10.3l-8.3,8.3l-0.2-0.2l0,0l-5.5-5.5L7.8,11l3.9,3.9l6.5-6.5L20,10.3z'/%3E%3C/svg%3E";
  @return url($icon);
}

@mixin item() {
  font-weight: inherit;
  outline: 0;
  letter-spacing: -0.025em;

  border: 1px solid #ddd;
  background-color: #ffffff;
  color: #222222;

  @content;
}

@mixin size($fs : 16, $width : 300, $height : 50){
  font-size   : rem($fs);
  width       : em($width, $fs);
  height      : em($height, $fs);
  line-height : em( ($height - 2), $fs);
  padding : {
    left : em(10, $fs);
    right: em(10, $fs);
  }
  @content;
}


@mixin color($bg, $text, $border, $bg-hover) {
  background: $bg;

  color: $text;

  @if $border {
      border-color: $border;
  }

  @else {
      border: 0px;
  }

  @content;
}

@mixin  placeholder($bg : null, $text : null, $border : null) {
  &::placeholder{
    @if $bg   {
      background-color: $bg;
    }
    @if $text {
      color: $text;
    }
    @if $border {
      border-color: $border;
    }
    font-weight: 300;
    opacity: 1; /* 파이어폭스에서 뿌옇게 나오는 현상을 방지하기 위한 css */
  }
  &::-webkit-input-placeholder{
    @if $bg   {
      background-color: $bg;
    }
    @if $text {
      color: $text;
    }
    @if $border {
      border-color: $border;
    }
    color: $text;
    font-weight: 300;
  }
  &::-moz-placeholder{
    @if $bg   {
      background-color: $bg;
    }
    @if $text {
      color: $text;
    }
    @if $border {
      border-color: $border;
    }
    color: $text;
    font-weight: 300;
    opacity: 1; /* 파이어폭스에서 뿌옇게 나오는 현상을 방지하기 위한 css */
  }
  &:-ms-input-placeholder  {
    @if $bg   {
      background-color: $bg;
    }
    @if $text {
      color: $text;
    }
    @if $border {
      border-color: $border;
    }
    color: $text;
    font-weight: 300;
  }
}


@mixin item-chrd() {
  display: inline-block;
  position: relative;
  vertical-align: middle;
  cursor: pointer;

  outline: 0;
  letter-spacing: -0.025em;


  > span{
    vertical-align: middle;
    line-height: 1.5em;
  }

  ._icon{
    position: relative;
    display: inline-block;
    line-height: 1.5em;

    background-color: #ffffff;

    &::before, &::after {
      content: "";
      position: absolute;
      left: 50%;
      top: 50%;
      width: 100%;
      height: 100%;
      transform: translate(-50%, -50%);
      background-repeat: no-repeat;
      background-size: 97%;
      background-position: center center;
    }
    &::before{
      border: 1px solid #dddddd;
    }
    &::after{
      @include vendor(transition, 'transform 0.2s cubic-bezier(0, 0.81, 0.36, 1.14)');
      transform: translate(-50%, -50%) scale(0);
    }
  }
  input[type=radio],
  input[type=checkbox] {
    position: absolute;
    top: 0 !important;
    left: 0 !important;
    line-height: 0 !important;
    font-size: 0 !important;
    width: 0 !important;
    height: 0 !important;
    color: transparent !important;
    overflow: hidden !important;
    opacity: 0;
    &:checked + ._icon::after {
      transform: translate(-50%, -50%) scale(1);
    }
  }


  @content;
}

@mixin size-chrd($fs : 16, $width : 27, $round : 0){
  font-size   : rem($fs);
  ._icon{
    width       : em($width, $fs);
    height      : em($width, $fs);
    @if $round == 100%{
      border-radius: 100%;
    }@else if $round != 0{
      border-radius: em($round, $fs);
    }
    &::before {
      @if $round == 100%{
        border-radius: 100%;
      }@else if $round != 0{
        border-radius: em($round, $fs);
      }
      background-color: #ffffff;
    }
  }
  @content;
}
